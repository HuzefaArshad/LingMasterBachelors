# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'SummaryScreen.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from gensim.summarization.summarizer import summarize
from gensim.summarization.textcleaner import split_sentences
from PyQt5.QtWidgets import QMessageBox

class Ui_SummaryWindow4(object):

    checkSave = False
    pre = ""
    default_font = 0
    temp=0
    temp2=0
    def f(self,seq):  # Order preserving unique sentences - sometimes duplicate sentences appear in summaries
         seen = set()  #sets are highly useful to efficiently remove duplicate values from a collection
         return [x for x in seq if x not in seen and not seen.add(x)]
    def summary(self,x, perc):  # x input document, perc: percentage of the original document to keep
        if len(split_sentences(x)) > 10:
                test_summary = summarize(x, ratio=perc, split=True)
                test_summary = '\n'.join(map(str, self.f(test_summary))) #join all items with the help of a seperator
                                                                # '\n' and map is used in place of loop applying str function
                                                                # to all the summary stuff.
        else:
                test_summary = x
        return test_summary
    def counter(self):
        w = 0
        text = self.textEdit.toPlainText()
        wrds = text.split()
        for word in wrds:
            w += 1
        if text == "":
            self.label_8.setText("Words 0")
        else:
            self.label_8.setText("Words " + str(w))
            self.temp=w
    def counter2(self):
        w = 0
        text1 = self.textEdit_2.toPlainText()
        wrds = text1.split()
        for word in wrds:
            w += 1
        if text1 == "":
            self.label_9.setText("Words 0")
        else:
            self.label_9.setText("Words " + str(w))
            self.temp2=w
    def work(self):
        valueinper=int(self.textEdit_3.toPlainText().strip())
        text = self.textEdit.toPlainText().strip()
        val=valueinper/100
        if self.textEdit_3.toPlainText().strip()=="":
                msg = QMessageBox()
                msg.setWindowTitle("Summary Genrator")
                msg.setText("Please Enter percentage value")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()
        elif valueinper!="" and valueinper>30 and self.temp>=450:
                summary1 = self.summary(text,val)
                self.textEdit_2.setText(summary1)
                if self.textEdit_2.toPlainText() != "":
                        self.textEdit_2.setReadOnly(True)
                
                self.default_font = self.textEdit_2.currentFont()
                msg = QMessageBox()
                msg.setWindowTitle("Summary Genrator")
                msg.setText("Summary Genrated Succesfully")
                msg.setIcon(QMessageBox.Information)
                x = msg.exec_()


        # summ = summarize(self)
        elif valueinper <30:
                msg = QMessageBox()
                msg.setWindowTitle("Summary Genrator")
                msg.setText("Please Enter Percenatge value Greater then 30%")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()
        elif self.temp<450:
                msg = QMessageBox()
                msg.setWindowTitle("Summary Genrator")
                msg.setText("Please Enter Paragraph that has atleast 450 words")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()

        
        
               
        else:
                msg = QMessageBox()
                msg.setWindowTitle("Summary Genrator")
                msg.setText("Please Check your word length it should be greater then 450 or Length should be more then 30%!")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()
    def setupUi(self, SummaryWindow):
        SummaryWindow.setObjectName("SummaryWindow")
        SummaryWindow.resize(835, 434)
        SummaryWindow.setStyleSheet("background-color: #272743")
        self.centralwidget = QtWidgets.QWidget(SummaryWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.seperator_summary = QtWidgets.QFrame(self.centralwidget)
        self.seperator_summary.setGeometry(QtCore.QRect(150, 0, 21, 441))
        self.seperator_summary.setStyleSheet("width:70px")
        self.seperator_summary.setFrameShape(QtWidgets.QFrame.VLine)
        self.seperator_summary.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.seperator_summary.setObjectName("seperator_summary")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(180, 0, 321, 31))
        self.label.setStyleSheet("font-size:15pt;\n"
"color:rgb(255, 255, 253);\n"
"font: SMILEN;")
        self.label.setObjectName("label")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(180, 30, 531, 161))
        self.textEdit.setStyleSheet("background-color:white;")
        self.textEdit.setObjectName("textEdit")
        self.textEdit.textChanged.connect(self.counter)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(180, 230, 151, 31))
        self.label_2.setStyleSheet("font-size:15pt;\n"
"color:rgb(255, 255, 253);\n"
"font: SMILEN;")
        self.label_2.setObjectName("label_2")
        self.textEdit_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_2.setGeometry(QtCore.QRect(180, 260, 531, 161))
        self.textEdit_2.setStyleSheet("background-color:white;")
        self.textEdit_2.setPlaceholderText("")
        self.textEdit_2.setObjectName("textEdit_2")
        self.textEdit_2.textChanged.connect(self.counter2)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(10, 300, 131, 41))
        self.label_3.setStyleSheet("font-size:15pt;\n"
"color:rgb(255, 255, 253);\n"
"font: SMILEN;")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(10, 340, 121, 20))
        self.label_4.setStyleSheet("font-size:15pt;\n"
"color:rgb(255, 255, 253);\n"
"font: SMILEN;")
        self.label_4.setObjectName("label_4")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(730, 80, 81, 41))
        self.pushButton.setStyleSheet("background-color: rgb(186, 232, 232);\n"
"color: rgb(45, 102, 142);\n"
"font: SMILEN;\n"
"border-style:outset;\n"
"border-width:2px;\n"
"border-radius:10px;\n"
"font:bold 12px;\n"
"border-color:black;\n"
"padding:10px;")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.work)
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(10, 20, 131, 121))
        self.label_6.setStyleSheet("background-color: #272743")
        self.label_6.setText("")
        self.label_6.setPixmap(QtGui.QPixmap("LM.png"))
        self.label_6.setScaledContents(True)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(10, 180, 121, 111))
        self.label_7.setStyleSheet("background-color: #272743")
        self.label_7.setText("")
        self.label_7.setPixmap(QtGui.QPixmap("Generate Summary.png"))
        self.label_7.setScaledContents(True)
        self.label_7.setObjectName("label_7")
        self.textEdit_3 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_3.setGeometry(QtCore.QRect(180, 200, 151, 31))
        self.textEdit_3.setStyleSheet("background-color:white;")
        self.textEdit_3.setObjectName("textEdit_3")
        
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(330, 200, 31, 31))
        self.label_5.setStyleSheet("background-color: #272743;\n"
"font:12pt bold;\n"
"color:white;\n"
"")
        self.label_5.setObjectName("label_5")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(730, 140, 91, 41))
        self.label_8.setStyleSheet(
                "color: white;"
        )
        self.label_8.setText("")
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(720, 360, 91, 41))
        self.label_9.setStyleSheet(
                "color: white;"
        )
        self.label_9.setText("")
        self.label_9.setObjectName("label_9")
        
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(720, 310, 111, 41))
        self.pushButton_2.setStyleSheet("background-color: rgb(186, 232, 232);\n"
"color: rgb(45, 102, 142);\n"
"font: SMILEN;\n"
"border-style:outset;\n"
"border-width:2px;\n"
"border-radius:10px;\n"
"font:bold 12px;\n"
"border-color:black;\n"
"padding:10px;")
        self.pushButton_2.setObjectName("pushButton_2")
        SummaryWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(SummaryWindow)
        QtCore.QMetaObject.connectSlotsByName(SummaryWindow)

    def retranslateUi(self, SummaryWindow):
        _translate = QtCore.QCoreApplication.translate
        SummaryWindow.setWindowTitle(_translate("SummaryWindow", "MainWindow"))
        self.label.setText(_translate("SummaryWindow", "Only Argumentative Texts:"))
        self.textEdit.setHtml(_translate("SummaryWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8.25pt;\"><br /></p></body></html>"))
        self.textEdit.setPlaceholderText(_translate("SummaryWindow", "Enter text here and click the \"Generate Summary\" button to generate extractive summary of it.."))
        self.label_2.setText(_translate("SummaryWindow", "Summary:"))
        self.textEdit_2.setHtml(_translate("SummaryWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8.25pt;\"><br /></p></body></html>"))
        self.label_3.setText(_translate("SummaryWindow", "GENERATE "))
        self.label_4.setText(_translate("SummaryWindow", "SUMMARY"))
        self.pushButton.setText(_translate("SummaryWindow", "Generate"))
        self.textEdit_3.setHtml(_translate("SummaryWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8.25pt;\"><br /></p></body></html>"))
        self.textEdit_3.setPlaceholderText(_translate("SummaryWindow", "Enter Percentage"))
        self.label_5.setText(_translate("SummaryWindow", "  %"))
        self.pushButton_2.setText(_translate("SummaryWindow", "Go To HOME"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    SummaryWindow = QtWidgets.QMainWindow()
    ui = Ui_SummaryWindow4()
    ui.setupUi(SummaryWindow)
    SummaryWindow.show()
    sys.exit(app.exec_())
